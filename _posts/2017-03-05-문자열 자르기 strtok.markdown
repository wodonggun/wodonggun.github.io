---
layout: post
title: " -------- "
subtitle: <span class="evidence"> -------- </span>
date: 2018-01-01
author: NoonGam
category: C
tags: Network Linux
comments: true
finished: true
---



## strtok

> strtok ( string tokenize ) 함수는 문자열을 분리해주는 역할을 한다. 예를 들어서 "I Love You Always." 라는 문자열을 공백을 기준으로 해서 분리하고 싶다. 그렇다면 I/Love/You/Alway. 와 같이 4개로 분리가 될 것이다. 이와 같이 분리하기 위해 strtok함수를 사용하지 않는다고 해서 구현하지 못하는 것은 아니다. 모든 문자들을 조사해서 공백인지 아닌지를 판단하고 그 앞에까지를 잘라내서 또 나머지를 공백을 찾고, 이와 같은 과정을 반복하면 되겠다. 그런데 그걸 이미 만들어놓은게 바로 strtok 이다. 따라서 우리는 필요할때 가따 쓰면 되겠다. 함수의 원형을 보자.

<a>char* strtok(char* str, const char* delimiters); </a>

<a>strtok(문자열,"자를 문자");</a>

만약 띄어쓰기를 기준으로 문자를 나누고 싶다면
<a>strtok(arr1, " "); </a>

만약 콤마를 기준으로 문자를 나누고 싶다면
<a>strtok(arr1, ","); </a>  




<br><br><br>
## 문자열 자르기 동영상

- ```특정한 문자를 기준으로 문자열 자르기```

<iframe width="560" height="315" src="//www.youtube.com/watch?list=PLa9dKeCAyr7jsbboqbsSnsTIVds0Dl3Ec&time_continue=43&v=B51VLZekuDs" frameborder="0" allowfullscreen></iframe>


<br><br><br>
## 예시


<a>char* strtok(char* str, const char* delimiters); </a>


```c++
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <string.h>
using namespace std;


int main()
{

	char arr1[20] = "I Love You Always";

	char *ptr = strtok(arr1," ");		//arr1문자열을 띄어쓰기로 끊어서 ptr에 저장.

	while (ptr != NULL)					//strtok으로 잘린 문자
	{
		printf("%s\n", ptr);			//ptr 출력
		ptr = strtok(NULL, " ");		//NULL을 넣으면 strtok에서 이전에 문자를 자른
		                                //후에 다음 문자의 주소를 반환해줌.
	}


}
```
<fieldset id="gpg-fieldset">
ps. scanf는 띄어쓰기 단위로 받을 수 있는데 띄어쓰기를 무시하고 문자열을 받고 싶으면

scanf("%s", arr1) -> scanf("%[\n]s", arr1)

</fieldset>





![img](/img/2017-03-05-문자열 자르기 strtok/strtok.gif)








<br><br><br>

## 참고 자료
* http://blog.naver.com/PostView.nhn?blogId=sharonichoya&logNo=220490957748
* https://dojang.io/mod/page/view.php?id=376

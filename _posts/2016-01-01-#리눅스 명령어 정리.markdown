---
layout: post
title: "#리눅스 명령어 정리 "
subtitle: <span class="evidence">아이디어 낙서장 .</span>
date: 2016-01-01
author: NoonGam
category: Linux
tags: Linux
comments: true
finished: true
---


https://css.or.kr/lkc2018/ - 리눅스 커널 프로그래밍

## 리눅스 명령어(Linux Command)

- 파일 인코딩 확인하기
```
$file -bi test.sh
```

- 파일 인코딩 변환하기
```
$iconv -c -f utf-8 -t euc-kr test.sh > test2.sh
```

- 현재경로 부터 찾기
$find -name 'title'

$find -name 'title*'

- 루트경로부터 찾기
$find / -name 'title'

- find / -name '.sh'


- 메모리 사용량 확인
$sar -r 1

- CPU, 메모리 사용량
$htop
(apt-get install htop)

- make 컴파일 속도 (다중 쓰레드 사용)
make -j4 (4코어 사용)

- 경로 이동
cd .. (상위 이동)
cd /  (루트로이동)
cd ~/  (루트폴더 이동)
pwd (자신의 현재 위치)
cd ~ 홈디렉토리로 이동

cd /etc/apache2  (절대경로로 이동)


- 파일 복사
cp MPTCP.sh /users/user/home/MPTCP.sh

- 폴더 복사
cp -r MPTCP /etc/MPTCP



## 프로세스 명령어

- $ps -efc
- $ps -def | grep wget2.sh
- [ 종료 ]     kill -9 2147
- [ 강제 종료 ] kill -15 2147   (PID넘버값)
-

## 네트워크 명령어

- [인터페이스 연결 끊기] ifconfig enp0s3 down
- [인터페이스 연결 ]     ifconfig enp0s3 up



- [호스트 네트워크 속도 제한] sudo tc qdisc add dev enp0s8 root handle 1:0 tbf rate 900Mbit burst 500k latency 1ms
- [호스트 네트워크 속도 변경] sudo tc qdisc change dev enp0s8 root handle 1:0 tbf rate 900Mbit burst 500k latency 1ms


- [ 네트워크 패킷 정보 보기 ] $sudo tcpdum -i enp0s8
- $wireshark
-

## 리눅스 TX RX 전송 속도 구하기

- 실행 방법 : $./bw.sh enp0s8

- vi bw.sh
```php
#!/bin/bash

INTERVAL="1"  # update interval in seconds

if [ -z "$1" ]; then
        echo
        echo usage: $0 [network-interface]
        echo
        echo e.g. $0 eth0
        echo
        exit
fi

IF=$1

while true
do
        R1=`cat /sys/class/net/$1/statistics/rx_bytes`
        T1=`cat /sys/class/net/$1/statistics/tx_bytes`
        sleep $INTERVAL
        R2=`cat /sys/class/net/$1/statistics/rx_bytes`
        T2=`cat /sys/class/net/$1/statistics/tx_bytes`
        TBPS=`expr $T2 - $T1`
        RBPS=`expr $R2 - $R1`
        TMBPS=`expr $TBPS \* 8 / 1024 / 1024`
        RMBPS=`expr $RBPS \* 8 / 1024 / 1024`
        TTBPS=`expr $TMBPS + $RMBPS`
#      echo "$1 TX $TMBPS Mbits/s RX $RMBPS Mbits/s TOT $TTBPS Mbits/s"
        echo "$TTBPS Mbits/s"
done
```

---
layout: post
title: "[DB] 오라클 데이터베이스 구조 - 그림으로 공부하는 오라클 구조 "
subtitle: <span class="evidence"> -------- </span>
date: 2020-05-02
author: NoonGam
category: DB
tags: DB
comments: true
finished: true
---

---

##

- DB에서 I/O 시간은 매우 중요함.

```
오라클 클라이언트 -(네트워크)- 서버클라이언트 - 디스크
                           - B/G클라이언트


서버프로세스 - 직접 디스크에 Write하지않음(캐시에 저장)
DBWR - 직접 캐시에 있는 데이터를 디스크에 Write


 풀스캔 데이터는 캐시에 저장하지않거나, 아주 잠시 저장됨.
```

Random Access - 무작위 접근(데이터가 이곳저곳 여러 블록에 저장되어 있음.)

Sequential - 순차 접근 (데이터가 하나의 블록에 저장되어있음.)

오라클 process - 여러개의 Process가 CRUD를 받아 처리함.

Process - 실행하고 있는 프로그램을 나타냄. (프로세스끼리는 서로 자원공유 안함.)

Thread - Process내부에서 병렬처리를 하기 위한 실행 단위 (하나의 프로세스에 여러개의 쓰레드가 존재하고, 이 쓰레드들은 서로 자원을 공유함)

캐시 - 자주쓰는 데이터를 Memory에 적재함.(프로세스는 자원공유를 하지 않지만, 캐시는 공유함)

가상메모리 - 물리적memory의 용량이 부족해서 디스크를 Memory로서 사용함.(해당 캐시가 필요할때 현재 메모리의 데이터와 디스크의 데이터를 교환함 = 페이징 스왑)

SGA - 공유메모리(공유폴 + 버퍼캐시)   (서버프로그램이 3개이면 공유메모리도 3개를 가지고 있음. 하지만 3개가 똑같음. 공유메모리끼리 서로 상호작용하여 데이터 일치하도록함.)

PGA - 비공유메모리



A B C 서버프로세스가 있을떄, A는 B,C프로세스의 공유메모리에 접근할 수 없다.(A B C는 서로 다른 메모리이지만 데이터는 같도록 서로 유지함 = 즉 A B C는 같은 데이터를 가지고있음.)
Lock을 걸어 베타적 관리를 하지만 수많은 Lock을 사용하여 성능 문제를 야기함.


세마포어 - OS에서 제공하는 자원관리 장치 (접근한 순서대로 권한을 줌.)


공유풀 - 쿼리에 대한 실행이력이 나와있음 (최적의 실행계획을 보관함.)

최적의 실행계획 - A B 테이블에 대한 조인을 진행하면서 여러 조합법에 따라 자원 소모가 달라짐.

하드parse - 공유풀에 최적의 실행계획이 없어 분석을 통해 저장함

소프트Parse - 공유풀에 실행계획이 있어서 해싱을 통해 찾아 그대로 사용함.


UPDATE, Delete Insert -> LOCK걸림 -> commit, rollback진행해야 풀림.


데드락 이해


Redo - 변경이력, 어떤정보를 뭐로 변경했는지

Undo - 어떻게하면 과거로 돌릴 수 있는지 이전 데이터 보관(이전 데이터값이 아닌 현재데이터에서 어떤 작업을해야 과거데이터가 됬는지?)

롤포워드 - Redo정보를 통해 과거의 데이터를 최신의 데이터로 만듬.
롤백 - Undo정보를 통해 변경을 취소함.


LGWR - Redo로그파일을 저장하는 프로세스

백그라운드프로세스 - DBWR, LGWR, ARCH

DBWR - 변경된 데이터를 캐시에서 -> 디스크에 씀(Commit시점이 아닌 나중에 천천히)
LGWR - Commit시점의 리두로그를 리두로그파일(디스크)에 기록
ARCH - 리두로그파일을 아카이브리드로그파일로 옮김.

PMON - 백그라운드프로그램 , 서버프로세스 비정상 종료 여부 체크,  메로리와 프로세스 자원 청소 , 내부락 제거, (Lisnter.ora파일에 인스턴스 정보 등록), 클라이언트 접속 수를 리스너에게 알려줌.
SMON - 비정상적으로 종료된 트랜잭션을 롤백, 세그먼트 청소, 언두 세그먼트의 크기 지정

##





<br><br><br>

## 참고 자료
* 1
* 2
* 3


<fieldset id="gpg-fieldset">
 샘플 필드
</fieldset>  


■ 테스트

![img](/img/2017-09-05-VirtualBox 설치하기/2.png)

<span class="evidence"><big>   하이   </big></span>

---
layout: post
title: " -------- "
subtitle: <span class="evidence"> -------- </span>
date: 2018-10-24
author: NoonGam
category: Study
tags: Network Linux
comments: true
finished: true
---



---


## 운영체제

교착상태 해결방법 4가지
1. 예방기법 = 사전에 제어
2. 회피 기법 = 교착상태발생시 회피시킴
3. 발견 기법 = 그래프를 사용하여 교착상태 발생 여부 발견
4. 회복 기법 = 프로세스를 종료하거나 자원을 선점하여 회복시킴.


■ 병렬 처리
1. 파이프라인 프로세서
2. 벡터 프로세서
3. 배열 처리기

■ 운영체제 운용 기법
1. 일괄처리시스템 = 일정량 또는 일정 데이터를 한번에 처리
2. 다중 프로그래밍 = 하나의 cpu와 메모리로 여러개의 프로그램 동시 처리
3. 시분할 시스템 = 여러 명의 사용자가 사용하는 시스템에서 번갈아 처리 = 라운드로빈
4. 다중 처리 시스템 = 여러 개의 cpu와 하나의 주기억장치를 이용하여 여러개의 프로그램 처리
5. 실시간 처리 = 데이터 발생 즉시 처리
6. 분산 처리 시스템 = 여러개의 컴퓨터를 통신 회선으로 연결하여 하나의 작업을 처리하는 방식(C/S모델,프로세서 풀 모델, 하이브리드모델)


■ 로더의 기능
1. Allocation(할당) = 프로그램을 실행하기 위해 메모리상의 공간 확보
2. Linking(연결) = 다른 프로그램 실행시 그 주소를 현 프로그램의 부분에 연결
3. Relocation(재배치) = 보조기억장치에서 주기억장치로 재배치 기능
4. Loading(적재) = 실행 프로그램을 할당된 기억공간에 실제로 옮기는 기능
5. Mapping (맵핑) = 가상메모리에서 메인메모리로 페이지를 옮길때 주소를 조정함


■ 보안 메커니즘
1. 기밀성(Confidentiality)
2. 무결성(integrity)
3. 가용성(Availability)
4. 인증(Authentication)
5. 부인방지(Non-Repudiation)





## 운영체제 개요

운영체제란 ?
- 사용자 대신 컴퓨터의 각종 자원을 효율적으로 관리하오 운영하게하는 시스템

CPU,기억장치,입출력장치,코드 및 데이터 구조 관리


커널이란?
- 커널은 하드웨어와 프로그램을 격리시키고
입출력장치 관리, 메모리 관리, 시스템호출,인터페이스
쉘이나 응용프로그램들은 정의된 시스템호출을 통해서 커널과 통신한다.

`명령어 해석은 Shell이 담당`



스케줄링, 기억장치 관리, 파일시스템 관리, 운영체제 고유 기능 제공.
커널 손상시 부팅때 에러와 운영체제 재설치해야함

운영체제 주요 서비스
1. UI
2. 프로그램 수행
3. 입출력
4. 파일 시스템 조작
5. 통신
6. 오류탐지
7. 자월 할당
8. 회계
9. 보호와 보안

시스템호출 = 사용자 프로그램이 운영체제가 수행하도록 지정되어 있는 작업들을 요청.
1. 일반 모드=사용자 모드=권한이 낮음.
2. 관리자모드=모니터모드=슈퍼바이저모드=커널모드=권한이 높음.


운영체제 구조
```
            ------------------------
                    사용자
            ------------------------
            쉘,시스템라이브러리,컴파일러,인터프리터
            ------------------------
                  ---커널---
            시스템 호출 인터페이스
            가상메모리,cpu스케줄링,페이징,파일시스템,스와핑,드라이버,입출력시스템
            하드웨어 커널 인터페이스
                  ---커널---
            ------------------------
            터미널,장치 제어,디스크,메모리제어,물리메모리
            ------------------------
```

버퍼링 = CPU가 입출력장치보다 속도가 빠르기때문에 생기는 현상
스풀링 = 디스크의 일부를 스풀 공간으로 매우 큰 버퍼처럼 사용하는 방식(속도차 줄이기위해)

버퍼링 - 하드웨어적구현, 스택,큐  단일사용자 주기억장치
스풀링 - 소프트웨어구현,  큐,    다중사용자 디스크,보조기억

인터럽트 - 예기치못한 일이 발생시 cpu에 알림
1. 외부 인터럽트 = ctrl+alt+del
2. 내부 인터럽트 = 오버플로우,언더플로우,프로그램 내부적 오류
3. 소프트웨어 인터럽트 = SVC(Super visor call)


Monolithic 커널 - 시스템 관리에 모든 기능을 장착(수정시 전체 재컴파일 후 재부팅)

마이크로 커널 - 최소한의 핵심커널만 탑재하고, 필요한 기능은 추가하여 추가된 기능만 재컴파일하여 바로 사용






## 운영체제

프로세스 상태
1. 보류 상태 - 일시중지,디스
크에 수록
2. 준비 상태 - cpu가 자신을 처리해 주기를 대기
3. 실행 상태 - 프로세스가 cpu를 차지하는 상태
4. 대기 상태 - cpu를 차지하고 실행되고 있다가, 입출력 처리와 같은 사건이 발생하면 대기 큐에서 대기
5. 완료 상태 - 프로세스가 완전히 수행되고 종료된 상태.


프로세스 상태 전이

1. 디스패치 = 준비-> 실행으로 바꿈
2. Time run out = 실행 -> 준비 상태
3. 대기(Block) = 실행 -> 대기
4. 깨움(wake up) = 대기 -> 준비

![img](/img/3-Study/2018-10-22-정보처리기사 데이터베이스/4.jpg)

소켓 = 통신의 극점을 뜻한다.
Telnet = 23
ftp = 21
ssh = 22
http = 80

파이프 = 두 프로세스가 통신할 수 있게 하는 전달자


스레드 = 하나드 프로세스에 하나의 제어 스레드를 가지지만, 여러개를 가질 수 있다. 여러 프로세스를 동시 처리 가능 = 스케줄링의 단위로 사용됨.(자원은 먹지 않음)

CPU 스케쥴링 = cpu자원을 언제 어떤 프로세스에게 배당할 것인지 결정하는것


프로세스 스케쥴링 종류

1. 선점 스케쥴링 = RR(round robin), SRT(Shortest Reamaing time), MLQ(multilevel queue), MFQ(Multilevel feedback queue) = 프로세스 도중에 끊고 큐에 넣고 다음걸로 넘어감

2. 비선점 스케쥴링 = FiFO, SJF(Shortest-job-first), HRN(Hightest response-ratio Next) = 한번 프로세스에 들어가면 끝날때까지 사용

priority Queue(우선순위 큐)


FCFS(First come first service)
선입 선출방식

SJF(가장 짧은 일 먼저)
시간이 짧은 순서대로 큐에 넣고 프로세스는 짧은거(큐 맨앞)를 먼저 실행함.

HRN(Highest Response ratio next)
SJF의 단점을 보완하기위해  대기시간+서비스받을시간/서비스받을시간 = 시스템 응답시간
(대기시간이 클수록 아무리 짧은게 와도 우선순위가 높아짐)

RR(Round Robin)
시분할시스템을 위해 설계 = 시간을 조각내어 할당 시간이 끝나면 다시 큐에넣고 다음에 이어서 처리

SRT(Shortest Remaining Time)
짧은게 큐에 들어오면 프로세스에서 돌던걸 큐로 넘기고 짧은걸 다시 프로세스에 넣음.

다단계 큐(Multi Level Queue)
서로 다른 작업을 각각의 큐에서 timeslice로 처리

다단계 피드백 큐(MFQ,MUltilevel Feedback queue)
준비상태에 큐를 만들어서 여러개의 피드백 큐를 거쳐 일을 처리(세분화)


- 운영체제 평가 기준
1. Throughput = 시스템 처리양
2. Turn Around Time = 처리 완료까지 걸리는 시간
3. Availability = 사용 가능한 정도
4. Reliability = 오류 발생시 해결 능력 = 안정성  

## 교착 상태

아무리 기다려도 결코 일어나지않을 일을 기다리는 상태

발생 조건
1. 상호배제(Mutual Exclusive) = 자원을 베타적으로 가지고있어서 다른놈이 접근 못함
2. 점유와 대기(Hold and wait) = 최소한 하나의 자원을 점유하고 있는 프로세스가 존재하며,
3. 비선점(Non Preemption) = 비선점 자원은 프로세스로부터 끝날때까지 벗어나지 못함.
4. 환형 대기(Circular Wait) = 서로 꼬리에 꼬리를 물고 원형으로 자원 요청

해결 방안
1. 예방
2. 회피
3. 탐지
4. 복구


## 메모리

스와핑
프로세스 총 공간이 메모리 공간보다 클때 다른 저장 장치에 저장하였다가 서로 스왑하면 실행 가능.

반입(Fetch) 정책 = 다음 프로그램을 주기억장치에 언제 적재할것인지 결정하는 정책

배치(Placement) 정책 = 새로 반입된 자료나 프로그램을 어디에 위치할 것인지 결정하는 정책

교체(Replacement) 정책 = 새로운 프로그램을 실행하기 위해 주기억장치에서 어떤 프로그램을 삭제할지 결정하는 정책


## UNIX 파일 시스템 구조

inode 블록 = 파일시스템 내의 각종 정보를 저장하고 있는 영역으로 (파일 이름과 파일 내용을 제외한 모든 정보)

boot 블록 = 부팅 시 필요한 코드를 저장하고 있는 블록

슈퍼 블록 = 전체 파일 시스템에 대한 정보를 저장

데이터 블록 = 실제 파일의 데이터가 저장된 블록

## 페이징

페이징(paging)은 가상 메모리를 구현하는 한 방법으로,
가상 메모리 공간을 일정한 크기의 페이지(page)로 나누어 관리하는 방법이다

`페이징 = 페이지 디폴트를 해결하는 과정`

`페이지 부재(Page Default) = 접근하고자 하는 데이터나 프로그램이 주기억장치에 존재하지않아 발생하는 중단 현상`

`워킹셋(참조된 페이지들의 집합) = 프로세스가 자주 참조되는 데이터를 물리 메모리 영역에 상주시켜 페이지폴트나 페이지 스왑 과정이 생기지 않게 함`

페이지 교체 기법
1. FIFO(선입선출)
2. Optimal Replacement(최적 교체) =
3. LRU(Least Recently Used) = 가장 오랫동안 사용되지 않은 페이지를 제거
4. SCR(Second Chance Replacement) = 자주 사용되는 프로그램은 따로 플래그 비트를 주어 대체 방지
5. NUR(Not Used Recently) = 2개의 플래그비트를 사용하여 최근 사용 여부/최근 교체 여부를 체크

페이징 기법 = 가상기억장치 그대로 페이지영역을 주메모리에 옮김
세그먼테이션 기법 = 가상기억장치를 논리적단위로 나눈 후, 주기억장치에 적재시킴.

## 스래싱

자주 페이지교체가 일어나서 페이지 부재가 자주발생함 = 페이지 교체시간이 프로세스 처리시간보다 더 많아짐 = 페이지 부재(Page Default)율이 높음.

페이징 기법 = 프로세스 메모리 적재 그 상태 그대로 가상 디스크로 옮기는 작업
세그먼테이션 기법 = 프로세스 메모리 적재된 상태를 쪼개서 가상 디스크로 옮기는 작업


물리 메모리 = 프레임
논리 메모리 = 페이지
프로그램이 실행되면 논리 메모리를 가지며, 자동으로 실제 메모리에 매핑됩니다.




## 윈도우

FAT16 = 최대 2GB = 2^16(16비트)x32x1024(클러스터(32kb)) = 2gb
FAT32 = 리눅스나 다른 운영체제 호환 좋음. 하지만 접근제어를 설정할 수 없어서 보안성이 없음.
NTFS(New Technology File System) = 보안,성능좋음.

OLE(Object Linking Ebmbeded)사용

```
        -----------
          하드웨어
        -----------
    HAL(Hardware Abstraction Layer)
        -----------
        마이크로 커널
        -----------
          관리자
        -----------
        응용프로그램
        -----------
```

## 유닉스

대화식 운영체제 = Shell
멀티 유저
호환성 및 이식성
계층적 파일시스템

유닉스 - 솔라리스,AIX,HP-UX
리눅스 - 페도라(레드헷),우분투(캐노니컬),centos(레드햇 제휴/centos프로젝트)

`커널 = 하드웨어 특성으로부터 프로그램 격리 + 하드웨어와 프로그램 사이의 간접적 관여 = `

`인터럽트는 일반사용자는 특별한 요청할 수 없는데, 시스템 호출을 통해서 운영체제와 프로그램 사이에 인터페이스를 제공`

```
        -----------
          kernel
        -----------
         System call
        -----------
        shell,Library routines
        -----------
        application

```

구성
1. 커널 = 항상 메모리에 상주하며, cpu,메모리,하드디스크, 하드웨어 자원을 제어하면서 스케줄링,
기억장치관리,시스템 호출 인터페이스, 입출력 서비스 등의 기능을 제공

2. 쉘(명령어 해석기) = 운영체제와 사용자가 대화하기 위한 기반을 제공하는 중요한 프로그램
본 쉘(최초), 씨 쉘(C shell), Korn Shell, Bash shell 등 다양하다.

3. 파일시스템(File System) = 트리화된 구조로, 최상위 디렉토리는 root 이다.

## 명령어

chmod (접근 권한)
chmod 옵션 (8진법 수) 파일

`-rwxr-xr-x` : 파일 접근 권한 분류 표기로, 처음 -는 파일 분류 타입.
`파일 타입` : d 디렉토리, l(소문자 L) 링크 카운터, s 소켓, p 파이프, - 일반, c 특수문자, b 특수블럭
`rwxr-xr-x` = 755
처음3개문자 = user의 권한
중간3개문자 = group의 권한
마지막3개문자 = other의 권한
r은 파일 읽기 = 4, w는 파일 쓰기 = 2, x는 파일 실행 = 1로, 3개문자씩 수를 더해서 쓴다.


mount = 보조기억장치에 들어있는 데이터를 읽고 저장하려면 UNIX시스템에 연결하는 작업을 말한다.
mount명령어를 통해 하드디스크 정보를 디렉토리에 논리적으로 연결시켜줌.




utmp = 현재 로그인한 정보를 담고있는 로그 파일

wtmp = 사용자들의 로그인/아웃 정보를 보관

btmp = 로그인 실패 기록

DAT(Dynamic Address Translation) - 가상메모리를 지원하는 운영체제에서 가상주소를 실주소로 변환
(속도 순서 : 연관사상 -> 직접/연관사상 -> 직접사상 )

netstat(TCP/IP 프로토콜 진단시 다양한 용도로 네트워크 정보 확인) -r -i -s -a -n

netstat -s = TCP/IP 프로토콜의 세부 정보를 출력(ICMP,TCP,UDP)

tcpdump - 인터페이스를 거치는 패킷의 내용을 출력해줌

nslookup - 해당 도메인의 주소를 출력해줌

host - nslookup과 비슷한 비대화형 모드(좀더 단순)

ping - ICMP를 통한 연결 확인

traceroute -m 5 hostname = 최대 5홉(max_hop)까지 추적





## 문제 정리

운영체계의 5계층 =  프로세서 - 메모리 - 프로세스 - 주변장치 - 파일 관리

파일 권한 = 최대 666  소유자,그룹,others  
디렉토리 권한 = 최대 777  소유자,그룹,others

무결성 점검 = tripwire


SMTP  - 메일 전송 프로토콜
POP3 - 읽음표시안됨,삭제안됨, 동기화 안됨, 그냥 서버에서 다운받아서 읽는 용도
IMAP - 서버와 실시간으로 동기화

S/MIME(Secure Multipurpose Internet Mail Extesnsion) - 메일 보안 + 서명과 암호화 기능

SSL(Secure Socket Layer) - 웹 브라우저와 웹 서버간의 암호화 방법

MD5 = 해쉬함수를 이용한 암호화 방법

TCSEC 정보가 안전한 정도를 객관적으로 판단하기 위하여 보안의 정도를 판별하는 기준

Tripwire = 파일 무결성 검사


Botnet = HTTP를 기반으로 모든 좀비들을 생성하여 분산 명령/제어

NAT(Network Address Translation) - 네트워크 주소변환 = 사설 네트워크에서 공인 IP로 주소를 변환하기 위해 사용

Packet Filtering - 방화벽을 통과하는 패킷의 보안 정책에 따른 통과 여부를 결정하는 역할

PGP (Prety good Protocol) - 암호화 복호화 프로그램 = 이메일 보안 표준 =  전자서명 + 압축 + 간단/재조립



비트벡터 = 하드디스크 용량이 작을 수록 유리하고, 마이크로 컴퓨터에서는 가능하지만, 대형 컴퓨터에서는 불가능하다.




## 참고 자료
*
*
*
<fieldset id="gpg-fieldset">
 샘플 파일
</fieldset>

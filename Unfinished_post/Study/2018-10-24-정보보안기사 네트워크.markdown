---
layout: post
title: " -------- "
subtitle: <span class="evidence"> -------- </span>
date: 2018-10-24
author: NoonGam
category: Study
tags: Network Linux
comments: true
finished: true
---

---

클래스 구분 공부
서브네팅, 슈퍼네팅



## 네트워크

MAC = 6바이트 = 8비트 x 6개
IP = 8비트 x 4개
IPv6 = 16비트 x 8개


- CIDR (Classless Inter-Domain Routing)
192.30.250.00/18





ARP - IP를 통해 MAC 요청(브로드캐스트로 요청하고 받은사람은 유니캐스트로 전송)

RARP - MAC주소를 통해 IP주소 요청 (브로드캐스트 요청)


ICMP - Internet control Messeage protocol
(오류 보고 / 호스트나 라우터의 정보를 획득하기 위해 요청하는 프로토콜)


UDP 헤더 = check sum, sour port, des port, lengh
(시퀀스 넘버는 TCP에 있음(패킷의 순서를 나타냄))

패리티 검사 = 1의 수가 홀수,짝수개인지 오류 검사

SNMP(Simple Network Management Protocol) = 네트워크상의 장비들의 정보를 수집하여 관리 및 변경하는 프로토콜(희안하게 UDP 사용)
SMTP(Simple Mail transfer Protocol) = TCP , PORT:25









<br><br>



![img](/img/3-Study/2018-10-22-정보처리기사 데이터베이스/3.png)

  ■ 유니캐스트(Unicast)

- 가장 많이 사용되는 통신 방식이다. 출발지 MAC주소와 목적지 MAC주소를 통해 통신을 하는데, 로컷 이더넷의 기본 성격은 붙어있는 모든 PC에게 뿌리는 Shared 방식이다. 따라서 모든 PC들은 MAC 주소를 비교하여 자신의 맥 주소와 일치하는 경우에만 CPU로 올려준다. 나머지는 해당 프레임을 버리게 되므로 CPU까지는 가지 못하는데, 따라서 PC 성능에 영향을 미치지 않는다.



■ 브로드캐스트(Broadcast)

- 로컬 랜 상에 붙어있는 모든 네트워크 장비들에게 보내는 통신이다. 통신의 대상이 특정한 한 네트워크가 아니라, 네트워크 안의 모든 장비들에게 통신을 하는 방식이라고 생각하면 된다. 브로드캐스트의 맥 주소는 FF:FF:FF:FF:FF:FF로 정해져 있는데, 이렇게 보냈을 경우 랜카드는 자신의 맥 주소와 일치하지 않더라도 무조건 패킷을 CPU에 보내게 되므로 CPU 사용량이 증가하여 PC 성능 저하가 발생하게 된다. 따라서 브로드캐스트 통신을 최소화 해야한다.

각 IP 클래스의 가장 높은 IP이다.
127.12.0.0이 IP 이면 해당 브로드캐스트 IP는 127.12.255.255이다.
(게이트웨이는 254번)

■ 멀티캐스트(Multicast)

- 보내고자 하는 정보를 그룹 내의 일정 네트워크 장비들에게만 한번에 보낼 수 있는 통신이다. 100대의 장비 중 80대의 장비에 똑같은 데이터를 보내야 되는 상황에서, 유니캐스트를 사용하면 한번에 하나씩 같은 정보를 80번 전송해야 하므로 트래픽을 가중시키게 된다. 브로드캐스트를 사용하면 100대의 장비에게 모두 전송되므로 20대의 장비는 불필요한 데이터를 받게 되므로 비효율적이다. 따라서 이 경우, 멀티캐스트를 통해 데이터를 전송하고자 하는 80대의 장비를 지정하여 한번에 전송할 수 있다.


■ 애니캐스트(Multicast)

- 애니캐스트 주소는 단일 주소를 공유하는 컴퓨터의 집합으로 정의된다. 애니캐스트 주소로 결정된 패킷은 가장 가까이 있는 애니캐스트 그룹의 구성원에게만 전송된다.

TELNET - NErminaL NETwork (원격 로그인 프로토콜) = 암호화없어서 해킹 취약
현재는 ssh가 사용되어 텔넷의 사용은 줄어듬





## A B C IP 클래스

IP 주소 = 네트워크 주소 + 호스트 주소

0000000,1111111(0,255)주소는 예약되어있음.
즉 254개 사용가능  

A 클래스  0 ~ 127
B 클래스 128 ~ 191
C 클래스 192 ~ 223
D 클래스 224 ~ 239
E 클래스 테스트용

```
만약 A클래스로 되어있으면, 라우팅을 할 수 있는 주소는 128개 이고, 도착하면 내부의
호스트 네트워크 16억자리에 중 하나에 포팅해준다.(0.0.0.0 ~ 0.255.255.255)

```

## IPv4와 IPv6의 변환

1. 이중스택
프로토콜이 변경되어도 이중스택을 사용하여야 한다. 이전 IPv4를 지원하고 IPv6도 동시에 지원해야 하므로

2. 터널링
IPv6를 사용하는 두 호스트가 통신을 할 때 패킷이 IPv4주소를 통과하려면 IPv4주소가 필요하다. 이때 IPv6는 캡슐화되고, 이 지역을 벗어나면 역캡슐화 된다.
마치 IPv6패킷이 한쪽에서 터널로 들어갔다가 출구에서 나오는거 같다고해서

 HTTP 80포트
 SMTP(메일) 25포트
 FTP 21포트
 DNS 53
 telnet 23
 SSH = SFTP = SCP 22번포트

  `TFTP`
  upd 69번 사용
  하드디스크가 없는 장비들의 네트워크 부팅을 위한 프로토콜
  보안 우수 x
  별도의 계정 파일을 사용하지 않음.



## 라우팅

거리백터 - 목적지까지의 최소비용만을 제공

LSDB(Link-state database) - 노드간으 연결된 정보를 저장 (플러딩을 통해 LSDB 테이블
  작성)

RIP - Routing Infromation Protocol

포워딩 테이블 - 목적지,다음 라우터,홉(a,b,c)

RIP - 거리벡터
OSPF - 링크 상태 프로토콜
BGP - 경계 경로 프로토콜
EIGRP - 하이브리드 프로토콜


## 무선랜 인증 기술

1. SSID를 이용한 폐쇄 시스템(NULL로 설정하여 요청 메세지 접속을 차단)

2. SSID를 숨김

3. MAC주소 인증(미리 허가된 MAC주소만 설정 - 일일이 설정해주는데 힘듬)

4. WEP 인증(클라이언트와 AP간의 ACK) - 인증 요청 -> 문자열 반환 -> 암호화된 문자열 요청 -> 성공 실패여부 반환

5. WPA(WI-FI Protected Access)
소프트웨어 업그레이드를 통해 지원 가능

6. PSK (Pre-shared Key)


- WAP(Wireless Application protocol)
웹과 같은 서비스에 접근하기 위한 모바일 장비의 표준


## RFID란 ?

가청 주파수 대역인 무선 주파수와 제품 정보(생산,유통,보관,상태)등 연동되는
전자칩을 이용하여 물체를 식별하는 기술



## 보안 공격
DoS공격 (과부하를 주어 서비스 방해)
- 포이즌 = 특이한 패킷을 보내어 처리불가능하게 만듬
- 플러딩 = 해커가 임의의 주소를 변경 -> 요청을 보내지만 응답은 이상한곳에 보내어 계속 수립은 안되고 대기상태 -> 수많은 패킷을 보내어 TCP 연결테이블의 오버플로우 -> 연결 요청 불가

스머프공격(제3자에게 공격) = ICMP Flooding
- 브로드캐스트 주소를 제3자로 설정하여 수많은 응답을 통해 과부하 유도

Fraggle Attack (ICMP대신에 UDP 사용)
= UDP 플러딩 공격

DNS Ampification = DNS서버 공격(적은 양의 패킷으로 수많은 응답패킷으로 변환)



시작주소 스푸핑 (조작된 시작 주소지)



Ping of Death(엄청 큰 ICMP패킷을 보내어 쪼개어진 패킷을 모두받을때까지 기다림=과부하)

스니핑 - 네트워크 패킷 도청

스푸핑 - 주소를 변경하여 자신에게 패킷이 오도록 만듬

세션 하이재킹 - 세션이 수립되어있는데 제 3자가 RST(reset) 패킷을 보내어 자신과 수립

피싱 - 불특정 다수에게 메일을 보내고 위장된 홈페이지로 접속하게 만들어 데이터 훔침

파밍 - 합법적인 도메인을 DNS이름을 속여 사용자가 가짜 사이트로 이동하여 개인정보 입력시 훔침.

Land Attack - 자기자신을 공격하는거 (출발지 IP와 목적지 IP를 동일하게)

<br><br><br>


## 암호

공개키암호 알고리즘 (수신자는 공개키를 송신자에게 보내고, 송신자는 공개키로 암호화하여 전송)

소인수분해 - RSA,Rabin,OAEP(RSA개량 알고리즘)
이산대수 - EIGamal DSA ECC

대칭키 - DES 3DES AES IDEA
공개키 - RSA ECC DSA

RSA 알고리즘 설명
https://www.youtube.com/watch?v=kGUlfVpIfaQ

은행은 사용자에게 공개키를 주고, 공개키와 관련된 개인키를 미리 연산하여 가지고있는다.
사용자는 받은 공개키를 가지고 암호화하여, 은행에게 보낸다. 은행은 개인키를 가지고
연산하여 원래값은 얻는다
(중간에 가로채더라도, 개인키를 모르기때문에 개인키를 알아내려고 해도 시간상의 문제로
  짧은시간에 개인키값을 구할 수 없다.)

RSA-OAEP
복호화한 후 올바른 인증정보가 나타나지않으면 다른사람이라고 판단하여 오류 메시지 회신.



AES(Advanced Encrypted Standard)
XOR연산을 통해 블록단위로 쉬프트연산 암호화



Diffie-hellman = 키 교환 알고리즘으로 공개키로 서로 비밀값을 만들어 대칭암호키



## 힙 스택 데이터

데이터 = 전역변수와 static변수
스택 = 함수 호출시에 지역,매개 변수들
힙 = 동적 할당(런타임에 결정)
코드 = 텍스트영역 (프로그램 소스코드)


## 네트워크

전송 제어 문자
1. SYNC 동기
2. SOH
3. STX
4. ETX
5. ETB
6. DLE 제어 문자 앞에 삽입하여 ``전송 제어 문자``라는 사실을 알림 ( 투명성 )

---
layout: post
title: " -------- "
subtitle: <span class="evidence"> -------- </span>
date: 2018-01-01
author: NoonGam
category: Study
tags: Network Linux
comments: true
finished: true
---

---

## 1일차
1. Processor
- CPU(연산장치)
- Process랑 다름(저장소->RAM에 프로그램이 올라간 상태를 Process라고 함)

2. Memory
- RAM 메모리
- HDD,SDD 등 저장소

3. I/O
- 마우스, 키보드, 마우스


```

Fetch = 메인 메모리에 올라온 명령어를 CPU가 한줄 한줄 읽어온다.

Decode = 가져온 명령어를 해석
Execute = 실행

OS 종류
Dos - Disk Operating System
Unix
Linux
MS Windows
MAC OS

GUI(Graphic User Interface)
CLI(Command Line Interface)




고급 언어 - 사람이 사용하는 자연어와 가장 유사한 언어
          portable(하드웨어에 독립적이라 호환성 좋음)
저급 언어 - 어셈플리(기계어를 좀더 알아보기 쉽게 매칭), 기계어(0,1로만 표기)
          not portable(호환성이 구림)



1. 고급언어 -> 컴파일러 -> 어셈블리어 -> 기계어 해석기
2. 고급언어 -> 인터프리터(베이직 언어 사용할때 사용되었음)

자바의 장점 = Unix, windows, mac 어디에서든 작성하고 컴파일하면 어떠한 타입의 컴퓨터에서도
실행 가능합니다.

Java 코드작성 -> Java Compiler -> Java ByteCode -> 1. JVM for intel
                                                -> 2. JVM for Mac
                                                -> 3. JVM for Unix

자바 컴팡일러는 컴파일에러를 체크하고, 바이트코드를 생성한다.




- 인터넷/웹
서블릿
JSP(Java Server Page) - 상당 부분이 자바랑 거의 비슷함
스프링(자바를 기반으로 웹페이지 개발) -
스트럿츠(자바를 기반으로 웹페이지 개발) -  
전자정부프레임워크(자바를 기반으로 웹페이지 개발) - 국내에서 개발된 공공웹사이트 개발 툴


- 스마트폰
안드로이드 앱개발

-스마트 TV 응용프로그램
자바스크립트로 된 응용프로그램 개발





```




## 2일차


```
자바에서는 포인터가 사라졌지만, Reference라는 것이 존재.

char c = '\u0061' 유니코드 61번째(a) 선언

유니코드 - 모든 글자를 2바이트 표시(HTML에 호환 불가,)
UTF-8 - 영문,숫자,기호는 1바이트로, 한글과 한자는 3바이트로 표현
전세계 모든글자를 표현 가능

윈도우에서는 유니코드 2번 사용
리눅스,유닉스,오픈소스에서는 유니코드1번 또는 UTF-8(유니코드3번)을 기본으로 사용.

float형은 끝에 선언과 동시에 값에 f를 붙여줘야함.
정수일때는 안붙여줘도 되지만 소수점자리가 있을때는 붙여줘야함



```




## 3일차

```
int[] score = new int[4];    or    int score[] = new int[4];

int[] score = {1,2,3,...,24)};

배열 = 레퍼런스타입 = 참조타입(메모리를 가리킴)


garbage colector(GC) = int[] score = {10,20,30,40{}을 선언하고
  다시 score = new int[5];라고 재선언 하게되면 배열 자리를 다시 할당하고
  원래 10,20,30,40이 있던 배열은 GC에 의해서 사라지게됨.


- 2차원 선언을 하고, 필요할때 뒤에 할당
int [][] score;
score = new int[20][];
score[0] = new int[4];
score[1] = new int[4];
score[19] = new int[4];



public static int sum(int i, int j)
public 접근제한자
static 전역사용
sum 메소드 네임
int 리턴 타입
int i,int j 파라미터


----
<레퍼런스 swap>

int [] num = {10,20};
swap(num)

public static void swap(int[] arr)
{
int temp = arr[0];
arr[0] = arr[1];
arr[1] = temp;
}
----



```




## 4일차

```
객체지향기술 = 소프트웨어 부품화,컴포넌트의 재사용을 주요 목표

클래스 = 속성(변수?) + 행위(메소드=함수)

객체 = 효율적으로 정보를 관리하기 위해서 사람들이 의미를 부여하고 분류하는 논리적인 단위
실세계에 존재하는 모든것이 될 수 있으며, 명사로서의 성질을 갖춘 모든 것은 객체로 만들어질 수 있다.

객체 장점
1. 문제를 쉽고 자연스럽게 모델링 할 수 있다.
2. 프로그램 모듈을 재사용 할 수 있다.
3. 프로그램의 확장 및 유지 보수가 용이
4. 쉬운 프로그램의 개발로 인한 생산성 향상

int a;
int b;
int c;

클래스 = 객체를 생성하는 형판

객체는 항상 클래스로부터 생성된다.

클래스로부터 생성된 객체를 instance라고 한다.



생성자 = 객체 생성시 호출되는 메소드(초기화 용도)

     객체이름     생성자 호출
Dog myDog = new Dog()
객체종류   객체생성   



```



## 5일차


<a>this 키워드</a>
1. 자기 자신의 멤버변수를 명시하기위해
2. 객체 전체를 함수의 매개변수로 전달해야 하는 경우

this()
1. 생성자에서 this()사용은 다른 생성자를 호출하는 형태
public Circle(){
  this(0);
}

public Circle(int r)
{
  this.r = r;
}


```
컴파일러가 자동으로 생성자 초기화 함수를 만들어준다.
ABC클래스이면 자동으로 ABC(){ }를 자동으로 생성해줌.
```

메소드 규칙
1. 메소드가 같은 클래스 혹은 상위클래스가 존재해야 함.
2. 메소드의 이름이 클래스와 같아야함.
3. 메소드의 파라미터개수가 다르거나 데이터형이 달라야 함.
4. 리턴형은 같아야하고, 달라도 됨.


super() 상하관계에서 상위 메소드 호출
this() 동등한관계에서 생성자 호출


## 6일차

1. 쓰레딩
자바 = 우선순위(priority)와 순활 할당(Round-robin) 방식을 사용

우선순위 default = 5 최대 = 10   최소 = 1

2. Mutual Exclusive



3. wait 스레드를 멈춤

`sleep`과 `wait`의 차이점 = sleep은 쓰레드를 멈추고, wait은 멈추지만 다른 쓰레드가 깨워줄때까지 대기한다.


4. notify  = wait상태의 스레드를 임으로 깨움
   notifyAll = 모든 스레드를 깨움


## 퀴즈 모음


```
자바 키워드 = class , import



float형 올바른것 float a = -1;
                float a = -1.2f;
                float a = 1.23e2;

                float b = -1.1;
                float b = 12e2;


if(i=0) 안됨
switch('a') 됨
switch(3) 됨




```



## 7일차

CGI (Command Gateway interface ) = 프로세스단위로 생성되어 과부화

애플릿

서블릿 = 자바언어를 이용하여 동적 웹페이지를 개발하기 위해 등장한 기술(웹 어플리케이션 개발 기술)
(JSP는 서블릿 기술에 기반함)



- 자바 서블릿 이해
1. 서블릿 문제점 대두 = 컨텐츠와 비지니스 로직이 분리되지 않음. 개발과 관리의 어려움
2. JSP 등장 = JSP 스크립팅 기술을 통해 핸들링 가능
3. JSP 스크립트 기술의 한계 = 컨텐츠와 비지니스 로직은 아직 분리 안됨. 컨텐츠 관리는 쉬워짐
4. MVC패턴 주목 =
  모델 : 자바 클래스(DAO,DO)
  뷰:JSP,JSTL
  컨트롤러: 서블릿

- 서블릿 컨테이너
JVM을 내장한 운영환경.
대표적으로 apache tomcat이 있음.


- 서블릿 장점
1. 쓰레드를 기반으로 하므로 운영 효율적으로
2. 자바기반이므로 자바 API 사용 가능
3.


- JSP 과정
1. JSP 파일(java.jsp)을 읽어옴
2. JSP파일을 servlet파일(test.java)로 변경
3. 바이트코드 파일(test.class)로 변경.



ASP(마이크로소프트 )
1. 인터프리팅 방식 = 사용자가 요청할때마다 컴파일을 시작하고 완료되면 보내줌.


JSP(자바)
1. 미리 컴파일된 코드를 가지고 응답해줌.
2. 속도 빠름

```
JSP
<%@ page import = "java.util.Date" %>
<html>
  <head></head>
    <body>
      안녕하세요. 오늘은 <% =today.getDate()%>일 입니다.
    </body>
</html>
```



 - JSP 문법

`@` : Directive : Global information for Page (Language,import statement)





## 참고 자료
* [최민 교수님](God!)

*
*
